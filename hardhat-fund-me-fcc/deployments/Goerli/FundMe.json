{
  "address": "0x2899ff50eB51F79915731acCd416BDE9f5E1e4a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x595fd888600bd188bce2cebb43724f7b561c0c6bc0addac9825940ff0ee193f2",
  "receipt": {
    "to": null,
    "from": "0xA77b98D26584f52c4aD6d6b0d49e04C5059FFe88",
    "contractAddress": "0x2899ff50eB51F79915731acCd416BDE9f5E1e4a2",
    "transactionIndex": 98,
    "gasUsed": "894562",
    "logsBloom": "0x
    "blockHash": "0x7e96228e2ae3306774a4d6640f0ba6165f75b4713a2ffd4aacf9042e2437195a",
    "transactionHash": "0x595fd888600bd188bce2cebb43724f7b561c0c6bc0addac9825940ff0ee193f2",
    "logs": [],
    "blockNumber": 7920369,
    "cumulativeGasUsed": "18741951",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "a93ef03e99bdd81a2a77dfd43f482eda",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 private constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    \\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        return s_priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x4d3c5c1adde02ea031956278ef2736dba01ea12bd0882cf2770eb3565df3bfe8\"},\"contracts/PriceConverter.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n    \\n}\\n\",\"keccak256\":\"0x6e51be45b0739933cb266ea577a9fad61573b42dbb6b1cc378377455f126d744\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fbd380380610fbd8339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e64806101596000396000f3fe6080604052600436106100595760003560e01c80630d8e6e2c146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b604051610094919061079f565b60405180910390f35b3480156100a957600080fd5b506100b2610344565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061081d565b610586565b6040516100e8919061079f565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b5061011061059e565b60405161011d9190610859565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906108a0565b6105c4565b60405161015a9190610859565b60405180910390f35b6802b5e3af16b18800006101a2600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060390919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da9061092a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102319190610979565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906109e4565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610476576000600182815481106103f1576103f0610a11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046e90610a40565b9150506103ce565b50600067ffffffffffffffff81111561049257610491610a89565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b50600190805190602001906104d69291906106df565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fd90610ae9565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b5050905080610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a90610b4a565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060f8361063f565b90506000670de0b6b3a764000085836106289190610b6a565b6106329190610bf3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068857600080fd5b505afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190610c9c565b5050509150506402540be400816106d79190610d17565b915050919050565b828054828255906000526020600020908101928215610758579160200282015b828111156107575782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ff565b5b5090506107659190610769565b5090565b5b8082111561078257600081600090555060010161076a565b5090565b6000819050919050565b61079981610786565b82525050565b60006020820190506107b46000830184610790565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ea826107bf565b9050919050565b6107fa816107df565b811461080557600080fd5b50565b600081359050610817816107f1565b92915050565b600060208284031215610833576108326107ba565b5b600061084184828501610808565b91505092915050565b610853816107df565b82525050565b600060208201905061086e600083018461084a565b92915050565b61087d81610786565b811461088857600080fd5b50565b60008135905061089a81610874565b92915050565b6000602082840312156108b6576108b56107ba565b5b60006108c48482850161088b565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610914601b836108cd565b915061091f826108de565b602082019050919050565b6000602082019050818103600083015261094381610907565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098482610786565b915061098f83610786565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c4576109c361094a565b5b828201905092915050565b6000815190506109de81610874565b92915050565b6000602082840312156109fa576109f96107ba565b5b6000610a08848285016109cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4b82610786565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7e57610a7d61094a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad3600083610ab8565b9150610ade82610ac3565b600082019050919050565b6000610af482610ac6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b34600b836108cd565b9150610b3f82610afe565b602082019050919050565b60006020820190508181036000830152610b6381610b27565b9050919050565b6000610b7582610786565b9150610b8083610786565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb957610bb861094a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bfe82610786565b9150610c0983610786565b925082610c1957610c18610bc4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4381610c24565b8114610c4e57600080fd5b50565b600081519050610c6081610c3a565b92915050565b6000819050919050565b610c7981610c66565b8114610c8457600080fd5b50565b600081519050610c9681610c70565b92915050565b600080600080600060a08688031215610cb857610cb76107ba565b5b6000610cc688828901610c51565b9550506020610cd788828901610c87565b9450506040610ce8888289016109cf565b9350506060610cf9888289016109cf565b9250506080610d0a88828901610c51565b9150509295509295909350565b6000610d2282610c66565b9150610d2d83610c66565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6c57610d6b61094a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da957610da861094a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de657610de561094a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2357610e2261094a565b5b82820290509291505056fea2646970667358221220be326e13a869c6ce8cb4b8541cb36f45edbdefdddd5147c878abe076a3bd012764736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630d8e6e2c146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b604051610094919061079f565b60405180910390f35b3480156100a957600080fd5b506100b2610344565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061081d565b610586565b6040516100e8919061079f565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b5061011061059e565b60405161011d9190610859565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906108a0565b6105c4565b60405161015a9190610859565b60405180910390f35b6802b5e3af16b18800006101a2600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060390919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da9061092a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102319190610979565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906109e4565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610476576000600182815481106103f1576103f0610a11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046e90610a40565b9150506103ce565b50600067ffffffffffffffff81111561049257610491610a89565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b50600190805190602001906104d69291906106df565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fd90610ae9565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b5050905080610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a90610b4a565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060f8361063f565b90506000670de0b6b3a764000085836106289190610b6a565b6106329190610bf3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068857600080fd5b505afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190610c9c565b5050509150506402540be400816106d79190610d17565b915050919050565b828054828255906000526020600020908101928215610758579160200282015b828111156107575782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ff565b5b5090506107659190610769565b5090565b5b8082111561078257600081600090555060010161076a565b5090565b6000819050919050565b61079981610786565b82525050565b60006020820190506107b46000830184610790565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ea826107bf565b9050919050565b6107fa816107df565b811461080557600080fd5b50565b600081359050610817816107f1565b92915050565b600060208284031215610833576108326107ba565b5b600061084184828501610808565b91505092915050565b610853816107df565b82525050565b600060208201905061086e600083018461084a565b92915050565b61087d81610786565b811461088857600080fd5b50565b60008135905061089a81610874565b92915050565b6000602082840312156108b6576108b56107ba565b5b60006108c48482850161088b565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610914601b836108cd565b915061091f826108de565b602082019050919050565b6000602082019050818103600083015261094381610907565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098482610786565b915061098f83610786565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c4576109c361094a565b5b828201905092915050565b6000815190506109de81610874565b92915050565b6000602082840312156109fa576109f96107ba565b5b6000610a08848285016109cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4b82610786565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7e57610a7d61094a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad3600083610ab8565b9150610ade82610ac3565b600082019050919050565b6000610af482610ac6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b34600b836108cd565b9150610b3f82610afe565b602082019050919050565b60006020820190508181036000830152610b6381610b27565b9050919050565b6000610b7582610786565b9150610b8083610786565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb957610bb861094a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bfe82610786565b9150610c0983610786565b925082610c1957610c18610bc4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4381610c24565b8114610c4e57600080fd5b50565b600081519050610c6081610c3a565b92915050565b6000819050919050565b610c7981610c66565b8114610c8457600080fd5b50565b600081519050610c9681610c70565b92915050565b600080600080600060a08688031215610cb857610cb76107ba565b5b6000610cc688828901610c51565b9550506020610cd788828901610c87565b9450506040610ce8888289016109cf565b9350506060610cf9888289016109cf565b9250506080610d0a88828901610c51565b9150509295509295909350565b6000610d2282610c66565b9150610d2d83610c66565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6c57610d6b61094a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da957610da861094a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de657610de561094a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2357610e2261094a565b5b82820290509291505056fea2646970667358221220be326e13a869c6ce8cb4b8541cb36f45edbdefdddd5147c878abe076a3bd012764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}